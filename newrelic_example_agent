#! /usr/bin/env ruby

#
# This is an example agent which generates synthetic data.
# A 1mHz (one cycle every 16 minutes) sin+1, cos+1 and sin+5 wave is generated,
# using the Unix epoch as the base.
#

require 'rubygems'
require 'bundler/setup'
require 'snmp'
require 'src/druid-master'
require 'newrelic_plugin'

module ExampleAgent
  class Agent < NewRelic::Plugin::Agent::Base

  def cpu(manager)
    response = manager.get(['1.3.6.1.4.1.2021.11.9.0'])
    response.each_varbind do |vb|
      puts "#{vb.name.to_s}  #{vb.value.to_s}  #{vb.value.asn1_type}"
      return 100 - vb.value.to_f
    end
  end

  def mem_total(manager)
    response = manager.get(['1.3.6.1.4.1.2021.4.5.0'])
    response.each_varbind do |vb|
      puts "#{vb.name.to_s}  #{vb.value.to_s}  #{vb.value.asn1_type}"
      return vb.value.to_f
    end
  end

  def mem_free(manager)
    response = manager.get(['1.3.6.1.4.1.2021.4.6.0'])
    response.each_varbind do |vd|
      puts "#{vd.name.to_s}  #{vd.value.to_s}  #{vd.value.asn1_type}"
      return vd.value.to_i
    end
  end

  def mem_total_buffer(manager)
    response = manager.get(["1.3.6.1.4.1.2021.4.14.0"])
    response.each_varbind do |vd|
      puts "#{vd.name.to_s}  #{vd.value.to_s}  #{vd.value.asn1_type}"
      return vd.value.to_i
    end
  end

  def mem_total_cache(manager)
    response = manager.get(["1.3.6.1.4.1.2021.4.15.0"])
    response.each_varbind do |vd|
      puts "#{vd.name.to_s}  #{vd.value.to_s}  #{vd.value.asn1_type}"
      return vd.value.to_i
    end
  end

  def get_avio()
    return `(atop 2 2 | grep avio |  awk '{print $15}' | paste -s -d'+' | sed 's/^/scale=3; (/' | sed 's|$|)/2|' | bc)`
  end

  def disk_percent(manager)
    response = manager.get(["1.3.6.1.4.1.2021.9.1.9.1"])
    response.each_varbind do |vd|
      puts "#{vd.name.to_s}  #{vd.value.to_s}  #{vd.value.asn1_type}"
      return vd.value.to_i
    end
  end

  def disk_load
    return `(snmptable -v 2c -c redBorder 127.0.0.1 diskIOTable|grep ' dm-0 ' | awk '{print $7}')`.strip.to_i
  end

  def memory_total_druid_broker
    return `(sudo /opt/rb/bin/rb_mem.sh -f /opt/rb/var/sv/druid_broker/supervise/pid 2>/dev/null)`.strip.to_i
  end

  def memory_total_druid_coordinator
    return `sudo /opt/rb/bin/rb_mem.sh -f /opt/rb/var/sv/druid_coordinator/supervise/pid 2>/dev/null`.strip.to_i
  end

  def memory_total_druid_historical
    return `sudo /opt/rb/bin/rb_mem.sh -f /opt/rb/var/sv/druid_historical/supervise/pid 2>/dev/null`.strip.to_i
  end

  def memory_total_druid_realtime
    return `sudo /opt/rb/bin/rb_mem.sh -f /opt/rb/var/sv/druid_realtime/supervise/pid 2>/dev/null`.strip.to_i
  end

  def memory_total_kafka
    return `sudo /opt/rb/bin/rb_mem.sh -f /opt/rb/var/sv/kafka/supervise/pid 2>/dev/null`.strip.to_i
  end

  def memory_total_nprobe
    return `sudo /opt/rb/bin/rb_mem.sh -f /opt/rb/var/sv/nprobe/supervise/pid 2>/dev/null`.strip.to_i
  end

  def memory_total_postgresql
    return `sudo /opt/rb/bin/rb_mem.sh -f /opt/rb/var/sv/postgresql/supervise/pid 2>/dev/null`.strip.to_i
  end

  def memory_total_rbwebui
    return `sudo /opt/rb/bin/rb_mem.sh -f /opt/rb/var/sv/rb-webui/supervise/pid 2>/dev/null`.strip.to_i
  end

  def memory_total_zookeeper
    return `sudo /opt/rb/bin/rb_mem.sh -f /opt/rb/var/sv/zookeeper/supervise/pid 2>/dev/null`.strip.to_i
  end

  def latency
    return `nice -n 19 fping -q -s fcojriosbello 2>&1| grep 'avg round trip time'|awk '{print $1}'`.strip.to_i
  end

  def pkts_rcv
    return 100-`sudo /bin/nice -n 19 /usr/sbin/fping -p 1 -c 10 fcojriosbello 2>&1 | tail -n 1 | awk '{print $5}' | sed 's/%.*$//' | tr '/' ' ' | awk '{print $3}'`.strip.to_i
  end

  agent_guid 'com.none.redborder'
  agent_version '1.0.2'
  agent_config_options :hertz # frequency of the periodic functions
  agent_human_labels('Manager') { 'redborder' }

  #host = `/opt/rb/bin/rb_get_managers.rb | grep enabled | awk {'print $1'}`.strip

  def poll_cycle

    SNMP::Manager.open(community: 'redBorder', host: '10.0.203.8') do |manager|

      druid_parser

      host = `hostname`.strip
      memory_total = mem_total(manager)
      memory = 100 * (memory_total - mem_free(manager) - mem_total_buffer(manager) - mem_total_cache(manager))

      #----------------------------------- RB_MONITOR METRICS ----------------------------------------------------
      report_metric 'CPU_PERC_' + host, 'Value', cpu(manager)
      report_metric 'LATENCY_' + host, 'Value', latency
      report_metric 'PKTS_RCV_' + host, 'Value', pkts_rcv
      report_metric 'MEM_TOTAL_' + host, 'Value', memory_total
      report_metric 'MEM_FREE_' + host, 'Value', mem_free(manager)
      report_metric 'MEM_TOTAL_BUFFER_' + host, 'Value', mem_total_buffer(manager)
      report_metric 'MEM_TOTAL_CACHE_' + host, 'Value', mem_total_cache(manager)
      report_metric 'MEM_PERC_' + host, 'Value', memory/memory_total
      # (disk utilization)avio shows the average number of milliseconds p/req
      report_metric 'AVIO_' + host, 'Value', get_avio()
      report_metric 'DISK_PERCENT_' + host, 'Value', disk_percent(manager)
      report_metric 'DISK_LOAD_' + host, 'Value', disk_load()
      report_metric 'MEMORY_DRUID_BROKER_' + host, 'Value', 100 * memory_total_druid_broker()/memory_total
      report_metric 'MEMORY_DRUID_COORDINATOR_' + host, 'Value', 100 * memory_total_druid_coordinator()/memory_total
      report_metric 'MEMORY_DRUID_HISTORICAL_' + host, 'Value', 100 * memory_total_druid_historical()/memory_total
      report_metric 'MEMORY_DRUID_REALTIME_' + host, 'Value', 100 * memory_total_druid_realtime()/memory_total
      report_metric 'MEMORY_KAFKA_' + host, 'Value', 100 * memory_total_kafka()/memory_total
      report_metric 'MEMORY_NPROBE_' + host, 'Value', 100 * memory_total_nprobe()/memory_total
      report_metric 'MEMORY_POSTGRESQL_' + host, 'Value', 100 * memory_total_postgresql()/memory_total
      report_metric 'MEMORY_RBWEBUI_' + host, 'Value', 100 * memory_total_rbwebui()/memory_total
      report_metric 'MEMORY_ZOOKEEPER_' + host, 'Value', 100 * memory_total_zookeeper()/memory_total

      #-------------------------------- DRUID METRICS -----------------------------------------------------
=begin
      # Pool commited
      report_metric 'historical_jvm_pool_commited_' + host, 'Value', @historical_jvm_pool_commited unless @historical_jvm_pool_commited.nil?
      report_metric 'realtime_jvm_pool_commited_' + host, 'Value', @realtime_jvm_pool_commited unless @realtime_jvm_pool_commited.nil?
      report_metric 'broker_jvm_pool_commited_' + host, 'Value', @broker_jvm_pool_commited unless @broker_jvm_pool_commited.nil?
      report_metric 'coordinator_jvm_pool_commited_' + host, 'Value', @coordinator_jvm_pool_commited unless @coordinator_jvm_pool_commited.nil?
      # Pool init
      report_metric 'historical_jvm_pool_init_' + host, 'Value', @historical_jvm_pool_init unless @historical_jvm_pool_init.nil?
      report_metric 'realtime_jvm_pool_init_' + host, 'Value', @realtime_jvm_pool_init unless @realtime_jvm_pool_init.nil?
      report_metric 'broker_jvm_pool_init_' + host, 'Value', @broker_jvm_pool_init unless @broker_jvm_pool_init.nil?
      report_metric 'coordinator_jvm_pool_init_' + host, 'Value', @coordinator_jvm_pool_init unless @coordinator_jvm_pool_init.nil?
      # Pool used
      report_metric 'historical_jvm_pool_used_' + host, 'Value', @historical_jvm_pool_used unless @historical_jvm_pool_used.nil?
      report_metric 'realtime_jvm_pool_used_' + host, 'Value', @realtime_jvm_pool_used unless @realtime_jvm_pool_used.nil?
      report_metric 'broker_jvm_pool_used_' + host, 'Value', @broker_jvm_pool_used unless @broker_jvm_pool_used.nil?
      report_metric 'coordinator_jvm_pool_used_' + host, 'Value', @coordinator_jvm_pool_used unless @coordinator_jvm_pool_used.nil?
      # Pool max
      report_metric 'historical_jvm_pool_max_' + host, 'Value', @historical_jvm_pool_max unless @historical_jvm_pool_max.nil?
      report_metric 'realtime_jvm_pool_max_' + host, 'Value', @realtime_jvm_pool_max unless @realtime_jvm_pool_max.nil?
      report_metric 'broker_jvm_pool_max_' + host, 'Value', @broker_jvm_pool_max unless @broker_jvm_pool_max.nil?
      report_metric 'coordinator_jvm_pool_max_' + host, 'Value', @coordinator_jvm_pool_max unless @coordinator_jvm_pool_max.nil?
      # Pool used
      report_metric 'historical_jvm_bufferpool_used_' + host, 'Value', @historical_jvm_bufferpool_used unless @historical_jvm_bufferpool_used.nil?
      report_metric 'realtime_jvm_bufferpool_used_' + host, 'Value', @realtime_jvm_bufferpool_used unless @realtime_jvm_bufferpool_used.nil?
      report_metric 'coordinator_jvm_bufferpool_used_' + host, 'Value', @coordinator_jvm_bufferpool_used unless @coordinator_jvm_bufferpool_used.nil?
      report_metric 'broker__jvm_bufferpool_used_' + host, 'Value', @broker_jvm_bufferpool_used unless @broker__jvm_bufferpool_used.nil?

      report_metric 'historical_jvm_bufferpool_count_' + host, 'Value', @historical_jvm_bufferpool_count unless @historical_jvm_bufferpool_count.nil?
      report_metric 'realtime_jvm_bufferpool_count_' + host, 'Value', @realtime_jvm_bufferpool_count unless @realtime_jvm_bufferpool_count.nil?
      report_metric 'coordinator_jvm_bufferpool_count_' + host, 'Value', @coordinator_jvm_bufferpool_count unless @coordinator_jvm_bufferpool_count.nil?
      report_metric 'broker_jvm_bufferpool_count_' + host, 'Value', @broker_jvm_bufferpool_count unless @broker_jvm_bufferpool_count.nil?

      report_metric 'historical_jvm_bufferpool_capacity_' + host, 'Value', @historical_jvm_bufferpool_capacity unless @historical_jvm_bufferpool_capacity.nil?
      report_metric 'realtime_jvm_bufferpool_capacity_' + host, 'Value', @realtime_jvm_bufferpool_capacity unless @realtime_jvm_bufferpool_capacity.nil?
      report_metric 'coordinator_jvm_bufferpool_capacity_' + host, 'Value', @coordinator_jvm_bufferpool_capacity unless @coordinator_jvm_bufferpool_capacity.nil?
      report_metric 'broker_jvm_bufferpool_capacity_' + host, 'Value', @broker_jvm_bufferpool_capacity unless @broker_jvm_bufferpool_capacity.nil?

      report_metric 'historical_jvm_bufferpool_init_' + host, 'Value', @historical_jvm_mem_init unless @historical_jvm_mem_init.nil?
      report_metric 'realtime_jvm_bufferpool_init_' + host, 'Value', @realtime_jvm_mem_init unless @realtime_jvm_mem_init.nil?
      report_metric 'coordinator_jvm_bufferpool_init_' + host, 'Value', @coordinator_jvm_mem_init unless @coordinator_jvm_mem_init.nil?
      report_metric 'broker_jvm_bufferpool_init_' + host, 'Value', @broker_jvm_mem_init unless @broker_jvm_mem_init.nil?

      report_metric 'historical_jvm_mem_max_' + host, 'Value',   @historical_jvm_mem_max unless @historical_jvm_mem_max.nil?
      report_metric 'realtime_jvm_mem_max_' + host, 'Value',   @realtime_jvm_mem_max unless @realtime_jvm_mem_max.nil?
      report_metric 'coordinator_jvm_mem_max_' + host, 'Value',   @coordinator_jvm_mem_max unless @coordinator_jvm_mem_max.nil?
      report_metric 'broker_jvm_mem_max_' + host, 'Value',   @broker_jvm_mem_max unless @broker_jvm_mem_max.nil?


      report_metric 'historical_jvm_mem_used_' + host, 'Value', @historical_jvm_mem_used unless @historical_jvm_mem_used.nil?
      report_metric 'realtime_jvm_mem_used_' + host, 'Value', @realtime_jvm_mem_used unless @realtime_jvm_mem_used.nil?
      report_metric 'coordinator_jvm_mem_used_' + host, 'Value', @coordinator_jvm_mem_used unless @coordinator_jvm_mem_used.nil?
      report_metric 'broker_jvm_mem_used_' + host, 'Value', @broker_jvm_mem_used unless @broker_jvm_mem_used.nil?

      report_metric 'historical_jvm_mem_commited_' + host, 'Value', @historical_jvm_mem_commited unless @historical_jvm_mem_commited.nil?
      report_metric 'realtime_jvm_mem_commited_' + host, 'Value', @realtime_jvm_mem_commited unless @realtime_jvm_mem_commited.nil?
      report_metric 'coordinator_jvm_mem_commited_' + host, 'Value', @coordinator_jvm_mem_commited unless @coordinator_jvm_mem_commited.nil?
      report_metric 'broker_jvm_mem_commited_' + host, 'Value', @broker_jvm_mem_commited unless @broker_jvm_mem_commited.nil?

      report_metric 'historical_jvm_gc_count_' + host, 'Value', @historical_jvm_gc_count unless @historical_jvm_gc_count.nil?
      report_metric 'realtime_jvm_gc_count_' + host, 'Value', @realtime_jvm_gc_count unless @realtime_jvm_gc_count.nil?
      report_metric 'coordinator_jvm_gc_count_' + host, 'Value', @coordinator_jvm_gc_count unless @coordinator_jvm_gc_count.nil?
      report_metric 'broker_jvm_gc_count_' + host, 'Value', @broker_jvm_gc_count unless @broker_jvm_gc_count.nil?

      report_metric 'historical_jvm_gc_time_' + host, 'Value', @historical_jvm_gc_time unless @historical_jvm_gc_time.nil?
      report_metric 'realtime_jvm_gc_time_' + host, 'Value', @realtime_jvm_gc_time unless @realtime_jvm_gc_time.nil?
      report_metric 'coordinator_jvm_gc_time_' + host, 'Value', @coordinator_jvm_gc_time unless @coordinator_jvm_gc_time.nil?
      report_metric 'broker_jvm_gc_time_' + host, 'Value', @broker_jvm_gc_time unless @broker_jvm_gc_time.nil?
=end
Thread.new do
  $i=1
  loop do
  #  puts '------------------------- iteration = ' + $i.to_s
    recolector
    sleep 5
    $i=$i+1
  end
end

$metrics = []
      druid_master
  end
end
end

#
# Register this agent with the component.
# The ExampleAgent is the name of the module that defines this
# driver (the module must contain at least three classes - a
# PollCycle, a Metric and an Agent class, as defined above).
#
NewRelic::Plugin::Setup.install_agent :example, ExampleAgent

#
# Launch the agent; this never returns.
#
NewRelic::Plugin::Run.setup_and_run
end
